{"version":3,"sources":["page/Home.js","page/About.js","page/Portofolio.js","page/Main.js","serviceWorker.js","index.js"],"names":["Home","Component","About","href","Portofolio","data-src","class","src","Main","className","to","replace","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+OAsBeA,E,uKAlBX,OACE,6BACE,oCACA,urB,GALWC,aCwBJC,E,uKAtBX,OACE,6BACE,qCACA,+GAGE,kKAIA,0DAGA,qCACS,6BAAK,uBAAGC,KAAK,iCAAR,0BAAkE,6BADhF,aAEY,6BAAK,uBAAGA,KAAK,sBAAR,kBAA4C,4BAAI,+D,GAjBvDF,aCeLG,E,uKAbX,OACE,6BACE,0CACA,2BAAG,yBAAKC,WAAS,kBAAkBC,MAAM,qCAAqCC,IAAI,qBAClF,0PAG+C,uBAAGJ,KAAK,2BAAR,UAH/C,U,GANiBF,aC0BVO,E,uKApBX,OACE,kBAAC,IAAD,KACI,wBAAIC,UAAU,SAAd,gBACA,wBAAIA,UAAU,UACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,IAAIC,SAAO,GAAvB,SACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,SAASC,SAAO,GAA5B,UACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,cAAcC,SAAO,GAAjC,gBAEN,yBAAKF,UAAU,WACb,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,SAASC,UAAWZ,IAChC,kBAAC,IAAD,CAAOW,KAAK,cAAcC,UAAWV,KAEvC,wBAAIK,UAAU,gB,GAfLR,aCMbc,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,GAAwB9B,OAAOC,SAASf,MACpD6C,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMyB,GAAN,sBAEPhC,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCrC/BE,K","file":"static/js/main.a91e4f00.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n \nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Home</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Morbi et est vitae sapien hendrerit mattis sit amet sed purus. \nNunc commodo sapien risus, eget commodo libero molestie vel. \nDonec a tortor tincidunt, lacinia orci eget, feugiat leo. \nEtiam volutpat molestie tempor. Mauris id eros porttitor, hendrerit odio \neget, laoreet mi. Vestibulum diam erat, scelerisque id eros nec, iaculis \npulvinar arcu. Mauris vestibulum magna vitae molestie egestas. Vestibulum \nlobortis diam vel mauris rutrum, eget maximus purus lacinia. Sed et tellus \nvel nibh vestibulum pretium non sit amet tortor. Nulla in mattis ligula. \nCurabitur feugiat eros nec odio pretium ullamcorper.</p>\n      </div>\n    );\n  }\n}\n \nexport default Home;","import React, { Component } from \"react\";\n \nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <h2>About</h2>\n        <p>\n            Halo, saya Deni Hidayat, Sering dipanggil Deden (di rumah) dan Deni (di kampus).\n          </p>\n          <p>\n            Saat ini, saya adalah freelance.\n            Pernah menempuh pendidikan di Universitas Bale Bandung mengambil program studi Teknik Informatika.\n          </p>\n          <p>\n            Kontak yang bisa dihubungi:\n          </p>\n          <p>\n            Email: <br/><a href=\"mailto:denihida1216@gmail.com\">denihida1216@gmail.com</a><br/>\n            Telepon : <br/><a href=\"tel:+6285721661555\">+6285721661555 <em><code>(WhatsApp &amp; Telegram)</code></em></a>\n          </p>\n      </div>\n    );\n  }\n}\n \nexport default About;","import React, { Component } from \"react\";\n \nclass Portofolio extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Portofolio</h2>\n        <p><img data-src=\"/img/profil.jpg\" class=\"rounded mx-auto d-block lazyloaded\" src=\"/img/profil.jpg\"/></p>\n        <p>Halaman ini berisi project yang pernah dan sedang saya kerjakan. \n          Ada yang bersifat side project dan ada juga yang serius. \n          Untuk project private, saya tidak cantumkan di sini. \n          Untuk project yang lainnya bisa ditemukan di <a href=\"github.com/denihida1216\">Github</a>.</p>\n      </div>\n    );\n  }\n}\n \nexport default Portofolio;","import React, { Component } from \"react\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Portofolio from \"./Portofolio\";\n \nclass Main extends Component {\n  render() {\n    return (\n      <HashRouter>\n          <h1 className=\"title\">Deni Hidayat</h1>\n          <ul className=\"header\">\n            <li><NavLink to=\"/\" replace>Blog</NavLink></li>\n            <li><NavLink to=\"/about\" replace>About</NavLink></li>\n            <li><NavLink to=\"/portofolio\" replace>Portofolio</NavLink></li>\n          </ul>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/portofolio\" component={Portofolio}/>\n          </div>\n          <ul className=\"footer\">\n          </ul>\n      </HashRouter>\n    );\n  }\n}\n \nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./page/Main\";\nimport \"./style.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>, \n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();"],"sourceRoot":""}